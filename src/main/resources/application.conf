node-id = "ch-xxxx"
node-id =${?NODE_ID}
chord-id = 0
chord-id = ${?CHORD_ID}
keys-per-node = 3
keys-per-node  = ${?CHORD_KEYS_PER_NODE}
total-of-nodes = 6
total-of-nodes = ${?CHORD_TOTAL_OF_NODES}
number-of-predecessors = 2
number-of-predecessors = ${?CHORD_NUMBER_OF_PREDECESSORS}
number-of-successors = 2
number-of-successors = ${?CHORD_NUMBER_OF_SUCCESSORS}
lookup-policy = "simple" // simple | scalable | direct
lookup-policy = ${?CHORD_LOOKUP_POLICY}
//
pool-id ="pool-xxxx"
pool-id = ${?POOL_ID}


rabbitmq {
  host = "148.247.201.143",
  port = 5672,
  virtual-host = "/",
  connection-timeout = 3,
  ssl = false,
  username = "guest",
  password = "guest",
  requeue-on-nack = false,
  requeue-on-reject = false,
  internal-queue-size = 500
}

rabbitmq.host = ${?RABBITMQ_HOST}
rabbitmq.port = ${?RABBITMQ_PORT}
rabbitmq.virtual-host = ${?RABBITMQ_VIRTUAL_HOST}
rabbitmq.connection-timeout = ${?RABBITMQ_CONNECTION_TIMEOUT}
rabbitmq.ssl = ${?RABBITMQ_SSL}
rabbitmq.username = ${?RABBITMQ_USERNAME}
rabbitmq.password = ${?RABBITMQ_PASSWORD}
rabbitmq.requeue-on-nack = ${?RABBITMQ_REQUEUE_ON_NACK}
rabbitmq.requeue-on-reject = ${?RABBITMQ_REQUEUE_ON_REJECT}
rabbitmq.internal-queue-size = ${?RABBITMQ_INTERNAL_QUEUE_SIZE}

